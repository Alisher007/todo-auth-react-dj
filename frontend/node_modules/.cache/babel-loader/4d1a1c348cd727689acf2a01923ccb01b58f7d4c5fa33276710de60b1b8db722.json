{"ast":null,"code":"var _jsxFileName = \"/home/alisher/djangoprojects/labs/todo-auth-react-dj/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  let [authTokens, setAuthTokens] = useState(() => localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null);\n  let [user, setUser] = useState(() => localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')) : null);\n  let [loading, setLoading] = useState(true);\n  const history = useHistory();\n  let loginUser = async e => {\n    e.preventDefault();\n    let response = await fetch('http://127.0.0.1:8000/api/token/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'username': e.target.username.value,\n        'password': e.target.password.value\n      })\n    });\n    let data = await response.json();\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem('authTokens', JSON.stringify(data));\n      history.push('/');\n    } else {\n      alert('Something went wrong!');\n    }\n  };\n  let logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem('authTokens');\n    history.push('/login');\n  };\n\n  // let updateToken = async ()=> {\n\n  //     let response = await fetch('http://127.0.0.1:8000/api/token/refresh/', {\n  //         method:'POST',\n  //         headers:{\n  //             'Content-Type':'application/json'\n  //         },\n  //         body:JSON.stringify({'refresh':authTokens?.refresh})\n  //     })\n\n  //     let data = await response.json()\n\n  //     if (response.status === 200){\n  //         setAuthTokens(data)\n  //         setUser(jwt_decode(data.access))\n  //         localStorage.setItem('authTokens', JSON.stringify(data))\n  //     }else{\n  //         logoutUser()\n  //     }\n\n  //     if(loading){\n  //         setLoading(false)\n  //     }\n  // }\n\n  let contextData = {\n    user: user,\n    authTokens: authTokens,\n    setAuthTokens: setAuthTokens,\n    setUser: setUser,\n    loginUser: loginUser,\n    logoutUser: logoutUser\n  };\n  useEffect(() => {\n    if (authTokens) {\n      setUser(jwt_decode(authTokens.access));\n    }\n    setLoading(false);\n  }, [authTokens, loading]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: loading ? null : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"aBbTXfZfqHsHQ1PD0tesWqDhSTA=\", false, function () {\n  return [useHistory];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jwt_decode","useHistory","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","authTokens","setAuthTokens","localStorage","getItem","JSON","parse","user","setUser","loading","setLoading","history","loginUser","e","preventDefault","response","fetch","method","headers","body","stringify","target","username","value","password","data","json","status","access","setItem","push","alert","logoutUser","removeItem","contextData","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/alisher/djangoprojects/labs/todo-auth-react-dj/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from 'react'\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from 'react-router-dom'\n\nconst AuthContext = createContext()\n\nexport default AuthContext;\n\n\nexport const AuthProvider = ({children}) => {\n    let [authTokens, setAuthTokens] = useState(()=> localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null)\n    let [user, setUser] = useState(()=> localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')) : null)\n    let [loading, setLoading] = useState(true)\n\n    const history = useHistory()\n\n    let loginUser = async (e )=> {\n        e.preventDefault()\n        let response = await fetch('http://127.0.0.1:8000/api/token/', {\n            method:'POST',\n            headers:{\n                'Content-Type':'application/json'\n            },\n            body:JSON.stringify({'username':e.target.username.value, 'password':e.target.password.value})\n        })\n        let data = await response.json()\n\n        if(response.status === 200){\n            setAuthTokens(data)\n            setUser(jwt_decode(data.access))\n            localStorage.setItem('authTokens', JSON.stringify(data))\n            history.push('/')\n        }else{\n            alert('Something went wrong!')\n        }\n    }\n\n\n    let logoutUser = () => {\n        setAuthTokens(null)\n        setUser(null)\n        localStorage.removeItem('authTokens')\n        history.push('/login')\n    }\n\n\n    // let updateToken = async ()=> {\n\n    //     let response = await fetch('http://127.0.0.1:8000/api/token/refresh/', {\n    //         method:'POST',\n    //         headers:{\n    //             'Content-Type':'application/json'\n    //         },\n    //         body:JSON.stringify({'refresh':authTokens?.refresh})\n    //     })\n\n    //     let data = await response.json()\n        \n    //     if (response.status === 200){\n    //         setAuthTokens(data)\n    //         setUser(jwt_decode(data.access))\n    //         localStorage.setItem('authTokens', JSON.stringify(data))\n    //     }else{\n    //         logoutUser()\n    //     }\n\n    //     if(loading){\n    //         setLoading(false)\n    //     }\n    // }\n\n    let contextData = {\n        user:user,\n        authTokens:authTokens,\n        setAuthTokens:setAuthTokens,\n        setUser:setUser,\n        loginUser:loginUser,\n        logoutUser:logoutUser,\n    }\n\n\n    useEffect(()=> {\n\n        if(authTokens){\n            setUser(jwt_decode(authTokens.access))\n        }\n        setLoading(false)\n\n\n    }, [authTokens, loading])\n\n    return(\n        <AuthContext.Provider value={contextData} >\n            {loading ? null : children}\n        </AuthContext.Provider>\n    )\n}\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,UAAU,MAAM,YAAY;AACnC,SAASC,UAAU,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,eAAeO,WAAW;AAG1B,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACxC,IAAI,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,MAAKY,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC;EAC3I,IAAI,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,MAAKY,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,GAAGX,UAAU,CAACU,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC;EAC/H,IAAI,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMoB,OAAO,GAAGjB,UAAU,CAAC,CAAC;EAE5B,IAAIkB,SAAS,GAAG,MAAOC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;MAC3DC,MAAM,EAAC,MAAM;MACbC,OAAO,EAAC;QACJ,cAAc,EAAC;MACnB,CAAC;MACDC,IAAI,EAACd,IAAI,CAACe,SAAS,CAAC;QAAC,UAAU,EAACP,CAAC,CAACQ,MAAM,CAACC,QAAQ,CAACC,KAAK;QAAE,UAAU,EAACV,CAAC,CAACQ,MAAM,CAACG,QAAQ,CAACD;MAAK,CAAC;IAChG,CAAC,CAAC;IACF,IAAIE,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;IAEhC,IAAGX,QAAQ,CAACY,MAAM,KAAK,GAAG,EAAC;MACvBzB,aAAa,CAACuB,IAAI,CAAC;MACnBjB,OAAO,CAACf,UAAU,CAACgC,IAAI,CAACG,MAAM,CAAC,CAAC;MAChCzB,YAAY,CAAC0B,OAAO,CAAC,YAAY,EAAExB,IAAI,CAACe,SAAS,CAACK,IAAI,CAAC,CAAC;MACxDd,OAAO,CAACmB,IAAI,CAAC,GAAG,CAAC;IACrB,CAAC,MAAI;MACDC,KAAK,CAAC,uBAAuB,CAAC;IAClC;EACJ,CAAC;EAGD,IAAIC,UAAU,GAAGA,CAAA,KAAM;IACnB9B,aAAa,CAAC,IAAI,CAAC;IACnBM,OAAO,CAAC,IAAI,CAAC;IACbL,YAAY,CAAC8B,UAAU,CAAC,YAAY,CAAC;IACrCtB,OAAO,CAACmB,IAAI,CAAC,QAAQ,CAAC;EAC1B,CAAC;;EAGD;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA,IAAII,WAAW,GAAG;IACd3B,IAAI,EAACA,IAAI;IACTN,UAAU,EAACA,UAAU;IACrBC,aAAa,EAACA,aAAa;IAC3BM,OAAO,EAACA,OAAO;IACfI,SAAS,EAACA,SAAS;IACnBoB,UAAU,EAACA;EACf,CAAC;EAGDxC,SAAS,CAAC,MAAK;IAEX,IAAGS,UAAU,EAAC;MACVO,OAAO,CAACf,UAAU,CAACQ,UAAU,CAAC2B,MAAM,CAAC,CAAC;IAC1C;IACAlB,UAAU,CAAC,KAAK,CAAC;EAGrB,CAAC,EAAE,CAACT,UAAU,EAAEQ,OAAO,CAAC,CAAC;EAEzB,oBACIb,OAAA,CAACC,WAAW,CAACsC,QAAQ;IAACZ,KAAK,EAAEW,WAAY;IAAAnC,QAAA,EACpCU,OAAO,GAAG,IAAI,GAAGV;EAAQ;IAAAqC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAE/B,CAAC;AAAAvC,EAAA,CAvFYF,YAAY;EAAA,QAKLJ,UAAU;AAAA;AAAA8C,EAAA,GALjB1C,YAAY;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}